//@version=6
indicator("Trend Analyzer MACD Enhanced", overlay=false)

// ==================== INPUT PARAMETERS ====================
// MACD parametry
macdFastLength = input.int(12, "MACD Fast Length", minval=1, group="MACD")
macdSlowLength = input.int(26, "MACD Slow Length", minval=1, group="MACD")
macdSignalLength = input.int(9, "MACD Signal Length", minval=1, group="MACD")

// RSI parametry
rsiLength = input.int(14, "RSI Length", minval=1, group="RSI")
rsiOverbought = input.int(70, "RSI Overbought Level", minval=50, maxval=100, group="RSI")
rsiOversold = input.int(30, "RSI Oversold Level", minval=0, maxval=50, group="RSI")

// Volume parametry
volumeLength = input.int(20, "Volume MA Length", minval=1, group="Volume")
volumeThreshold = input.float(1.5, "Volume Threshold Multiplier", minval=1.0, step=0.1, group="Volume")

// Vizuální parametry
showRSI = input.bool(true, "Zobrazit RSI", group="Display")
showVolume = input.bool(true, "Zobrazit Volume", group="Display")
showTable = input.bool(true, "Zobrazit tabulku", group="Display")

// ==================== MACD CALCULATIONS ====================
[macdLine, signalLine, histLine] = ta.macd(close, macdFastLength, macdSlowLength, macdSignalLength)
macdCrossUp = ta.crossover(macdLine, signalLine)
macdCrossDown = ta.crossunder(macdLine, signalLine)

// MACD Divergence
f_macdDivergence(isBullish) =>
    float lastHigh = high[1]
    float lastLow = low[1]
    float lastMacdHigh = macdLine[1]
    float lastMacdLow = macdLine[1]
    
    for i = 2 to 20
        if isBullish
            if high[i] > lastHigh
                lastHigh := high[i]
                lastMacdHigh := macdLine[i]
        else
            if low[i] < lastLow
                lastLow := low[i]
                lastMacdLow := macdLine[i]
    
    isBullish ? (low < lastLow and macdLine > lastMacdLow) : (high > lastHigh and macdLine < lastMacdHigh)

bullishDivergence = f_macdDivergence(true)
bearishDivergence = f_macdDivergence(false)

// ==================== RSI CALCULATIONS ====================
rsiValue = ta.rsi(close, rsiLength)
rsiCrossUp = ta.crossover(rsiValue, 50)
rsiCrossDown = ta.crossunder(rsiValue, 50)
isOverbought = rsiValue > rsiOverbought
isOversold = rsiValue < rsiOversold

// RSI Divergence
f_rsiDivergence(isBullish) =>
    float lastHigh = high[1]
    float lastLow = low[1]
    float lastRsiHigh = rsiValue[1]
    float lastRsiLow = rsiValue[1]
    
    for i = 2 to 20
        if isBullish
            if high[i] > lastHigh
                lastHigh := high[i]
                lastRsiHigh := rsiValue[i]
        else
            if low[i] < lastLow
                lastLow := low[i]
                lastRsiLow := rsiValue[i]
    
    isBullish ? (low < lastLow and rsiValue > lastRsiLow) : (high > lastHigh and rsiValue < lastRsiHigh)

rsiBullishDivergence = f_rsiDivergence(true)
rsiBearishDivergence = f_rsiDivergence(false)

// ==================== VOLUME ANALYSIS ====================
volumeMA = ta.sma(volume, volumeLength)
isHighVolume = volume > volumeMA * volumeThreshold
volumeTrend = ta.change(volumeMA) > 0

// ==================== SIGNAL STRENGTH CALCULATION ====================
// MACD Signal (0-100)
macdSignal = 0.0
if macdCrossUp
    macdSignal := 100
else if macdCrossDown
    macdSignal := -100
else
    macdSignal := (macdLine - signalLine) / math.abs(signalLine) * 100

// RSI Signal (0-100)
rsiSignal = 0.0
if rsiCrossUp
    rsiSignal := 50
else if rsiCrossDown
    rsiSignal := -50
else
    rsiSignal := (rsiValue - 50) * 2

// Volume Signal (0-100)
volumeSignal = 0.0
if isHighVolume
    volumeSignal := volumeTrend ? 100 : -100
else
    volumeSignal := volumeTrend ? 50 : -50

// Celková síla signálu
signalStrength = (macdSignal * 0.5) + (rsiSignal * 0.3) + (volumeSignal * 0.2)

// ==================== BLOKOVÉ TRENDOVÉ ZÓNY A ODDĚLENÍ ZAČÁTKU TRENDŮ ====================
// Určení aktuálního trendu
var int trendState = 0  // 1 = UPTREND, -1 = DOWNTREND, 0 = NEUTRAL
if signalStrength > 20
    trendState := 1
else if signalStrength < -20
    trendState := -1
else
    trendState := 0

// Detekce změny trendu
var int prevTrendState = na
trendChange = na(prevTrendState) ? false : (trendState != prevTrendState)
if not na(trendState)
    prevTrendState := trendState

// Blokové pozadí podle trendu
bgcolor(trendState == 1 ? color.new(color.green, 85) :
       trendState == -1 ? color.new(color.red, 85) :
       color.new(color.gray, 90))

// Svislá čára přes celý graf na začátku nového trendu
if trendChange and not na(trendState) and trendState != 0
    line.new(bar_index, na, bar_index, na, color=trendState == 1 ? color.green : color.red, width=2, style=line.style_solid, extend=extend.both)

// ==================== PLYNULÉ BAREVNÉ PŘECHODY V POZADÍ ====================
// Výpočet průhlednosti podle síly signálu (0 = nejsilnější, 90 = nejslabší)
transp = 90 - math.min(90, math.abs(signalStrength) * 1.2)
bgcolor(signalStrength > 0 ? color.new(color.green, transp) :
       signalStrength < 0 ? color.new(color.red, transp) :
       color.new(color.gray, 90))

// ==================== PLOTTING ====================
// MACD
plot(macdLine, "MACD", color=color.blue, linewidth=2)
plot(signalLine, "Signal", color=color.orange, linewidth=1)
plot(histLine, "MACD Histogram", style=plot.style_columns, color=histLine >= 0 ? color.green : color.red, linewidth=3)
hline(0, "Zero", color=color.gray, linestyle=hline.style_dotted)

// RSI
plot(showRSI ? rsiValue : na, "RSI", color=color.yellow, linewidth=2)
hline(showRSI ? rsiOverbought : na, "Overbought", color=color.red)
hline(showRSI ? rsiOversold : na, "Oversold", color=color.green)
hline(showRSI ? 50 : na, "RSI 50", color=color.gray)

// Volume
plot(showVolume ? volume : na, "Volume", style=plot.style_columns, color=color.new(color.blue, 50))
plot(showVolume ? volumeMA : na, "Volume MA", color=color.red, linewidth=2)

// Úroveň pro šipky (těsně pod minimem histogramu za posledních 100 svíček)
arrowLevel = ta.lowest(histLine, 100) - (ta.highest(histLine, 100) - ta.lowest(histLine, 100)) * 0.1
plotshape(trendChange and trendState == 1, style=shape.triangleup, location=location.bottom, color=color.green, size=size.small, title="UPTREND Start")
plotshape(trendChange and trendState == -1, style=shape.triangledown, location=location.bottom, color=color.red, size=size.small, title="DOWNTREND Start")

// ==================== TABLE ====================
if showTable and barstate.islast
    var table infoTable = table.new(position.top_right, 2, 8, border_width=1)
    
    // Trend
    string trendText = "NEUTRAL"
    color trendColor = color.gray
    color trendBg = color.new(color.gray, 90)
    if signalStrength > 50
        trendText := "UPTREND"
        trendColor := color.white
        trendBg := color.new(color.green, 0)
    else if signalStrength < -50
        trendText := "DOWNTREND"
        trendColor := color.white
        trendBg := color.new(color.red, 0)
    else if signalStrength > 20
        trendText := "UPTREND"
        trendColor := color.white
        trendBg := color.new(color.green, 60)
    else if signalStrength < -20
        trendText := "DOWNTREND"
        trendColor := color.white
        trendBg := color.new(color.red, 60)
    table.cell(infoTable, 0, 0, "Trend", bgcolor=color.new(color.blue, 90), text_color=color.white)
    table.cell(infoTable, 1, 0, trendText, bgcolor=trendBg, text_color=trendColor)
    
    // MACD stav
    string macdText = "NEUTRAL"
    color macdColor = color.gray
    if macdCrossUp
        macdText := "UP"
        macdColor := color.green
    else if macdCrossDown
        macdText := "DOWN"
        macdColor := color.red
    else if macdLine > signalLine
        macdText := "UP"
        macdColor := color.new(color.green, 50)
    else if macdLine < signalLine
        macdText := "DOWN"
        macdColor := color.new(color.red, 50)
    table.cell(infoTable, 0, 1, "MACD", bgcolor=color.new(color.blue, 90), text_color=color.white)
    table.cell(infoTable, 1, 1, macdText, bgcolor=color.new(macdColor, 90), text_color=color.white)
    
    // RSI stav
    string rsiText = "NEUTRAL"
    color rsiColor = color.gray
    if isOverbought
        rsiText := "DOWN"
        rsiColor := color.red
    else if isOversold
        rsiText := "UP"
        rsiColor := color.green
    else if rsiValue > 50
        rsiText := "UP"
        rsiColor := color.new(color.green, 50)
    else if rsiValue < 50
        rsiText := "DOWN"
        rsiColor := color.new(color.red, 50)
    table.cell(infoTable, 0, 2, "RSI", bgcolor=color.new(color.blue, 90), text_color=color.white)
    table.cell(infoTable, 1, 2, rsiText, bgcolor=color.new(rsiColor, 90), text_color=color.white)
    
    // Volume stav
    string volumeText = "LOW"
    color volumeColor = color.gray
    if isHighVolume
        if volumeTrend
            volumeText := "HIGH"
            volumeColor := color.green
        else
            volumeText := "HIGH"
            volumeColor := color.red
    else if volumeTrend
        volumeText := "RISING"
        volumeColor := color.new(color.green, 50)
    else if not volumeTrend
        volumeText := "FALLING"
        volumeColor := color.new(color.red, 50)
    table.cell(infoTable, 0, 3, "Volume", bgcolor=color.new(color.blue, 90), text_color=color.white)
    table.cell(infoTable, 1, 3, volumeText, bgcolor=color.new(volumeColor, 90), text_color=color.white)
    
    // Divergence
    string divergenceText = "None"
    color divergenceColor = color.gray
    color divergenceBg = color.new(color.gray, 90)
    if bullishDivergence or rsiBullishDivergence
        divergenceText := "Positive"
        divergenceColor := color.white
        divergenceBg := color.new(color.green, 0)
    else if bearishDivergence or rsiBearishDivergence
        divergenceText := "Negative"
        divergenceColor := color.white
        divergenceBg := color.new(color.red, 0)
    table.cell(infoTable, 0, 4, "Divergence", bgcolor=color.new(color.blue, 90), text_color=color.white)
    table.cell(infoTable, 1, 4, divergenceText, bgcolor=divergenceBg, text_color=divergenceColor)
    
    // Síla signálu
    table.cell(infoTable, 0, 5, "Signal strength", bgcolor=color.new(color.blue, 90), text_color=color.white)
    table.cell(infoTable, 1, 5, str.tostring(math.round(signalStrength, 1)) + "%", 
               bgcolor=color.new(trendColor, 90), text_color=color.white)

// ==================== ALERTS ====================
// Silné signály
strongBuySignal = signalStrength > 50 and macdCrossUp and rsiCrossUp and isHighVolume and volumeTrend
strongSellSignal = signalStrength < -50 and macdCrossDown and rsiCrossDown and isHighVolume and not volumeTrend

// Divergence
divergenceBuySignal = bullishDivergence or rsiBullishDivergence
divergenceSellSignal = bearishDivergence or rsiBearishDivergence

alertcondition(strongBuySignal, title="Silný nákupní signál", message="Silný nákupní signál detekován!")
alertcondition(strongSellSignal, title="Silný prodejní signál", message="Silný prodejní signál detekován!")
alertcondition(divergenceBuySignal, title="Býčí divergence", message="Býčí divergence detekována!")
alertcondition(divergenceSellSignal, title="Medvědí divergence", message="Medvědí divergence detekována!") 